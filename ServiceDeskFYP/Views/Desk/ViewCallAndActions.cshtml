@model ServiceDeskFYP.Models.ViewCallPageViewModel

@{
    ViewBag.Title = "View Call";
}

<h2>Call Details</h2>

<div>
    
    <hr />

    <div>
        @Html.ActionLink("Action", "ActionCallGET") |
        @Html.ActionLink("Notify", "NotifyGET") |
        @if (Model.CallDetails.Closed)
        {
            @Html.ActionLink("Re-Open Call", "CloseOpenCall", new { Reference = Model.CallDetails.Reference })
        }
        else
        {
            @Html.ActionLink("Close Call", "CloseOpenCall", new { Reference = Model.CallDetails.Reference })
        } |
        @Html.ActionLink("Edit", "EditCallGET") |
        <text>PDF</text> |
        @if (Model.CallDetails.LockedToUserId != null)
        {
            @Html.ActionLink("Clear Lock", "ClearLock", new { Reference = Model.CallDetails.Reference })<text> | </text>
        }
        @Html.ActionLink("Assign Resource", "AssignResourceGET") |
        <text>Bookmark</text> |
        <text>View Report</text> |
        @Html.ActionLink("Reset SLA", "ResetSlaGET")
    </div>


    @if (ViewBag.ErrorMessage != null)
    {
        <h5 style="color:red">@ViewBag.ErrorMessage</h5>
    }
    @if (ViewBag.SuccessMessage != null)
    {
        <h5 style="color:blue">@ViewBag.SuccessMessage</h5>
    }

    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Reference)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Reference)
        </dd>

        @if (!String.IsNullOrEmpty(Model.CallDetails.ResourceUserId))
        {
            <dt>
                @Html.DisplayNameFor(model => model.CallDetails.ResourceUserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CallDetails.ResourceUserName)
            </dd>
        }
        else
        {
            <dt>
                @Html.DisplayNameFor(model => model.CallDetails.ResourceGroupName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CallDetails.ResourceGroupName)
            </dd>
        }

        <dt>
            SLA
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.SlaPolicy) - @Html.DisplayFor(model => model.CallDetails.SlaLevel)
            @if (Model.CallDetails.SlaExpiry != null)
            {
                <text>- Expected: @Html.DisplayFor(model => model.CallDetails.SlaExpiry)</text>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Category)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Category)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Created)
        </dd>

        @if (Model.CallDetails.Required_By != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.CallDetails.Required_By)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CallDetails.Required_By)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Closed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Closed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Hidden)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Hidden)
        </dd>

        @if (Model.CallDetails.LockedToUsername != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.CallDetails.LockedToUsername)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CallDetails.LockedToUsername)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Lastname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Lastname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Extension)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Extension)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.OrganisationAlias)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.OrganisationAlias)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Organisation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Organisation)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Department)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Department)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Regarding_Ref)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Regarding_Ref)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallDetails.Summary)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallDetails.Summary)
        </dd>
    </dl>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CallDetails.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CallDetails.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        <br />
    </div>
</div>


<div class="table-responsive">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).ActionedByUserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).TypeDetails)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActionsList.ElementAt(0).Attachment)
            </th>
        </tr>

        @foreach (var item in Model.ActionsList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ActionedByUserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeDetails)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attachment)
                </td>
            </tr>
        }

    </table>
</div>