@model ServiceDeskFYP.Models.DeskPageViewModel

@{
    ViewBag.Title = "ViewCalls";
    var resource = Request.Params["resource"];
}



<h2>ViewCalls</h2>

@if (ViewBag.ErrorMessage != null)
{
    <h5 style="color:red">@ViewBag.ErrorMessage</h5>
}
@if (ViewBag.SuccessMessage != null)
{
    <h5 style="color:blue">@ViewBag.SuccessMessage</h5>
}

<div>
    <form method="get" action="">
        @Html.ActionLink("New", "Create") |
        <a onclick="toggleSearch()" style="cursor: pointer">Search</a> |
        @Html.ActionLink("PDF", "") |
        @Html.ActionLink("Sort", "Create") |
        @Html.ActionLink("Filter", "Create") |
        @Html.ActionLink("Closed Calls", "Create") |
        <a href="@HttpContext.Current.Request.Url.AbsoluteUri">Refresh</a>
        <select name="resource">
            <option value="">My Calls</option>
            @foreach (var item in Model.GSVM)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>


        <input type="submit" value="Go"/>
    </form>
</div>

<div id="searchDIV" style="display:none" class="form-inline">
    <form method="get" action="">
        <input type="text" name="search" id="searchfield" placeholder="Search..." />
        @if (!String.IsNullOrEmpty(resource)){ <input type = "hidden" name = "resource" value = @resource /> }
        <input type="submit" value="Search" />
    </form>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Reference)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).SlaLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Required_By)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Summary)
        </th>
        <th>
            Name
        </th>
    </tr>

    @foreach (var item in Model.VCVMList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Reference)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SlaLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @if (item.Required_By != null)
                {
                    @Convert.ToDateTime(item.Required_By).ToShortDateString()
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.Lastname)
            </td>
        </tr>
    }

</table>

@if (!Model.VCVMList.Any())
{
    <h4>No Calls assigned</h4>
}


<script>
    function toggleSearch() {
        var searchDiv = document.getElementById("searchDIV");
        if (searchDiv.style.display === "none") {
            searchDiv.style.display = "block";
        }
        else {
            searchDiv.style.display = "none";
        }
    }
</script>