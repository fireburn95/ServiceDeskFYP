@model ServiceDeskFYP.Models.DeskPageViewModel

@{
    ViewBag.Title = "View Calls";
    var resource = Request.Params["resource"];
    var search = Request.Params["search"];
    var sortcategory = Request.Params["sortcategory"];
    var sortdirection = Request.Params["sortdirection"];
    var closed = Request.Params["closed"];
    var urgent = Request.Params["urgent"];

    string header = "View";
    if (!string.IsNullOrEmpty(urgent) && urgent.Equals("true"))
    {
        header = header + " Urgent";
    }
    if (!string.IsNullOrEmpty(closed) && closed.Equals("true"))
    {
        header = header + " Closed";
    }
    header = header + " Calls Belonging To ";
    if (String.IsNullOrEmpty(resource))
    {
        header = header + " You";
    }
    else
    {
        header = header + " " + Model.GroupName;
    }
}


<h2>@header</h2>


@if (ViewBag.ErrorMessage != null)
{
    <h5 style="color:red">@ViewBag.ErrorMessage</h5>
}
@if (ViewBag.SuccessMessage != null)
{
    <h5 style="color:blue">@ViewBag.SuccessMessage</h5>
}

<div>

    <!--Calls Menu Bar-->
    <form method="get" action="">
        @Html.ActionLink("New", "Create") |
        <a onclick="toggleSearch()" style="cursor: pointer">Search</a> |
        <text>PDF</text> |
        <a onclick="toggleSort()" style="cursor: pointer">Sort</a> |
        @*@Html.ActionLink("Filter", "Create") |*@
        <a href="/desk?resource=@resource&closed=@closed" style="cursor: pointer">Clear</a> |
        @if (closed == "true")
        {
            <a href="/desk?resource=@resource&closed=false" style="cursor: pointer">Open Calls</a>
        }
        else
        {
            <a href="/desk?resource=@resource&closed=true" style="cursor: pointer">Closed Calls</a>
        } |
        <a href="@HttpContext.Current.Request.Url.AbsoluteUri">Refresh</a>
        <select name="resource">
            <option value="">My Calls</option>
            @foreach (var item in Model.GSVM)
            {
                if (!String.IsNullOrEmpty(resource) && resource.Equals(item.Id + ""))
                {
                    <option value="@item.Id" selected="selected">@item.Name</option>
                }
                else
                {
                    <option value="@item.Id">@item.Name</option>
                }

            }
        </select>
        <input type="submit" value="Go" />
    </form>
</div>

<!--Search field-->
<div id="searchDIV" style="display:none">
    <form method="get" action="">
        <input type="text" name="search" placeholder="Search..." />
        @if (!String.IsNullOrEmpty(resource))
        {<input type="hidden" name="resource" value=@resource />}
        @if (!String.IsNullOrEmpty(sortcategory))
        {<input type="hidden" name="sortcategory" value=@sortcategory />}
        @if (!String.IsNullOrEmpty(sortdirection))
        {<input type="hidden" name="sortdirection" value=@sortdirection />}
        @if (!String.IsNullOrEmpty(closed))
        {<input type="hidden" name="closed" value=@closed />}
        @if (!String.IsNullOrEmpty(urgent))
        {<input type="hidden" name="urgent" value=@urgent />}
        <input type="submit" value="Search" />
    </form>
</div>

<!--Sort fields-->
<div id="sortDIV" style="display:none">
    <form method="get" action="">
        Sort by:
        <select name="sortcategory">
            <option value="reference">Reference</option>
            <option value="slalevel">SLA Level</option>
            <option value="category">Category</option>
            <option value="created">Created</option>
            <option value="requiredby">Required By</option>
            <option value="summary">Summary</option>
            <option value="firstname">First Name</option>
            <option value="lastname">Last name</option>
        </select>
        <select name="sortdirection">
            <option value="asc">Ascending</option>
            <option value="desc">Descending</option>
        </select>
        @if (!String.IsNullOrEmpty(resource))
        {<input type="hidden" name="resource" value=@resource />}
        @if (!String.IsNullOrEmpty(search))
        {<input type="hidden" name="search" value=@search />}
        @if (!String.IsNullOrEmpty(closed))
        {<input type="hidden" name="closed" value=@closed />}
        @if (!String.IsNullOrEmpty(urgent))
        {<input type="hidden" name="urgent" value=@urgent />}
        <input type="submit" value="Sort" />
    </form>
</div>

<br />

<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Reference)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).SlaLevel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Required_By)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VCVMList.ElementAt(0).Summary)
                </th>
                <th>
                    Name
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.VCVMList)
            {
                <tr class="@if (item.Urgent && (!item.Closed)) { <text>danger</text> }" onclick="window.location='/desk/call/@item.Reference';">
                    <td>
                        @Html.DisplayFor(modelItem => item.Reference)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SlaLevel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @if (item.Required_By != null)
                        {
                            @Convert.ToDateTime(item.Required_By).ToShortDateString()
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Summary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.Lastname)
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

@if (!Model.VCVMList.Any())
{
    <h4>No Calls assigned</h4>
}


<script>
    function toggleSearch() {
        var searchDiv = document.getElementById("searchDIV");
        var sortDiv = document.getElementById("sortDIV");

        if (searchDiv.style.display === "none") {
            sortDiv.style.display = "none";
            searchDiv.style.display = "block";
        }
        else {
            searchDiv.style.display = "none";
        }
    }

    function toggleSort() {
        var sortDiv = document.getElementById("sortDIV");
        var searchDiv = document.getElementById("searchDIV");

        if (sortDiv.style.display === "none") {
            searchDiv.style.display = "none";
            sortDiv.style.display = "block";
        }
        else {
            sortDiv.style.display = "none";
        }
    }
</script>